version: '3.8'

services:
  postgresql-master:
    image: bitnami/postgresql:latest
    container_name: postgresql-master
    ports:
      - '5432:5432'
    volumes:
      - postgresql_master_data:/bitnami/postgresql
    environment:
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=homework
      - POSTGRESQL_DATABASE=postgres
      - POSTGRESQL_SYNCHRONOUS_COMMIT=on
      - POSTGRESQL_NUM_SYNCHRONOUS_REPLICAS=1
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5


  postgresql-slave:
    image: bitnami/postgresql:latest
    container_name: postgresql-slave
    depends_on:
      - postgresql-master
    ports:
      - '5442:5432'
    volumes:
      - postgresql_slave_data:/bitnami/postgresql
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_MASTER_HOST=postgresql-master
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  db-migrations:
      container_name: db-migrations
      image: golang:alpine
      volumes:
        - ./migrations:/migrations:ro
      depends_on:
        postgresql-master:
          condition: service_healthy
      restart: "no"
      command: >
        sh -euxc '
          go install github.com/pressly/goose/v3/cmd/goose@latest &&
          export PATH="$(go env GOPATH)/bin:$PATH" &&
          goose -dir /migrations postgres "postgres://postgres:homework@postgresql-master:5432/postgres?sslmode=disable" up
        '
  hr-bot:
    build:
      context: ./
      dockerfile: dockerfile
    container_name: hr-bot
    volumes:
      - ./.env:/app/.env:ro
    depends_on:
      - postgresql-master
    command: ["python", "-m", "app.main"]



volumes:
  postgresql_master_data:
  postgresql_slave_data: